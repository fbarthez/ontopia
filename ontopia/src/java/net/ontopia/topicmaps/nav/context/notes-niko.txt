$Id: notes-niko.txt,v 1.3 2001/06/19 17:01:05 niko Exp $
Notes for the userContextFilter implementation [18.6.2001]

baseNameContext is used in:

* net.ontopia.topicmaps.nav.taglibs.render.DisplayTag
  (sets additional scope themes according attribut values of
   "baseNameContext" and "variantNameContext")
  - doStartTag method:
      Collection designerBaseNameContext = NavUtils.args2Topics(tm, baseNameContext, null);
      context.put("designerBaseName", designerBaseNameContext);
      Collection designerVariantNameContext = NavUtils.args2Topics(tm, variantNameContext, null);
      context.put("designerVariantName", designerVariantNameContext);

* net.ontopia.topicmaps.nav.utils.comparators.TopicComparator
  implements Comparator (compare-Method)
  (for comparision of two topics get out of the appropiate names
   according the scope context)
  - to late to change anything belonging the scope theme set
  - this is also too late (because here we have no access to RequestConfig, for instance)
  - uses/calls SortNameGrabber

* net.ontopia.topicmaps.nav.utils.grabbers.SortNameGrabber
  - right place for modifying the scope theme set
  - this is also too late (because here we have no access to RequestConfig, for instance)

* net.ontopia.topicmaps.nav.utils.stringifiers.DisplayStringifier
  (!! last stage, already changed getTopicTitle for support of
      userContextFilter)

* net.ontopia.topicmaps.nav.utils.structures.ClusterWithContext
  !!!!

* net.ontopia.topicmaps.nav.utils.structures.Display
  (JavaBean alike)

---
DisplayStringifier: line 195

    // ------------------------------------------------------
    // <addition> by niko, 15-June-2001
    // append Collection with basename themes the user has selected for her context
    UserFilterContextStore userFilterContext = requestConfig.getUserFilterContext();
    if (userFilterContext != null) {
      this.cBaseNameContext.addAll( userFilterContext.getScopeBaseNames(tm) );
    }
    // </addition>
    // ------------------------------------------------------

---
Idea in ClusterWithContext
iterate through all displays 
modify context and afterwards setDisplay()
--


DisplayWithContext
-> .addContext(String key, Collection scopes)

is used by

* ClusterWithContext

* ClusterStringifier

[*AssociationsTag ]

--



implements ClusterIF

* Cluster
* ClusterWithContext
  [could be cached: getDisplays() ]



<topic id="la-boheme">
  <instanceOf><topicRef xlink:href="opera-template.xtm#opera"/></instanceOf>
  <!-- premiere: teatro-regio (1 Feb 1896) -->
  <!-- written-by: giacosa illica -->
  <!-- based-on: scenes-de-la-vie-de-boheme -->
  <!-- published-by: ricordi-p -->
  <!-- character-in-opera: rodolfo marcello colline schaunard benoit mimi musetta alcindoro -->
  <!-- aria-in-opera: che-gelida-manina mi-chiamono-mimi o-soave-fanciulla o-dolci-mani -->
  <!-- setting: paris -->
  <baseName>
    <baseNameString>La Bohème (Puccini)</baseNameString>
    <variant>
      <parameters><topicRef xlink:href="ontopsi.xtm#sort"/></parameters>
      <variantName><resourceData>Boheme</resourceData></variantName>
    </variant>
  </baseName>
  <baseName>
    <scope><topicRef xlink:href="#puccini"/></scope>
    <baseNameString>La Bohème</baseNameString>
    <variant>
      <parameters><topicRef xlink:href="ontopsi.xtm#sort"/></parameters>
      <variantName><resourceData>Boheme</resourceData></variantName>
    </variant>
  </baseName>


--> Where should the application now which topics should be added
    to the userFilterContext (for example add "puccini" to "la-boheme")?
    because they are associated?